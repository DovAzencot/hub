diff --git a/node_modules/@ledgerhq/hw-transport/lib/Transport.d.ts b/node_modules/@ledgerhq/hw-transport/lib/Transport.d.ts
index 9099450..8b9df11 100644
--- a/node_modules/@ledgerhq/hw-transport/lib/Transport.d.ts
+++ b/node_modules/@ledgerhq/hw-transport/lib/Transport.d.ts
@@ -3,8 +3,13 @@
 import EventEmitter from "events";
 import type { DeviceModel } from "@ledgerhq/devices";
 import { TransportError, StatusCodes, getAltStatusMessage, TransportStatusError } from "@ledgerhq/errors";
-import { LocalTracer, TraceContext, LogType } from "@ledgerhq/logs";
+// import { LocalTracer, TraceContext, LogType } from "@ledgerhq/logs";
 export { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };
+
+type LocalTracer = typeof import('@ledgerhq/logs')['LocalTracer'];
+type TraceContext = typeof import('@ledgerhq/logs')['TraceContext'];
+type LogType = typeof import('@ledgerhq/logs')['LogType'];
+
 /**
  */
 export type Subscription = {
@@ -132,7 +137,7 @@ export default class Transport {
      * @returns {Promise<void>} A promise that resolves when the transport is closed.
      */
     close(): Promise<void>;
-    _events: EventEmitter<[never]>;
+    _events: EventEmitter;
     /**
      * Listen for an event on the transport instance.
      * Transport implementations may have specific events. Common events include:
